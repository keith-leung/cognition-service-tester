@using CognitionTesterWeb.Models
@model TextClassificationModel

<h1>@ViewData["Title"]</h1>

<h4>@Html.Label("文章自动归类历史，可参考各个厂商实现")</h4>

<hr />

<style>
    .k-grid table {
        table-layout: fixed;
    }
  
    .k-grid td{
        white-space: nowrap;
        text-overflow: ellipsis;
    }
</style> 
<script>
    function onDetail(e) {
        e.preventDefault();
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        if (dataItem) {
            window.open('/TextClassification/Detail?Id=' + dataItem.Id);
        }
    }
</script>

<div class="row">
    @(Html.Kendo().Grid<TextClassificationResultDto>()
              .Name("TextClassificationResults")
          .Columns(
              columns =>
              {
                  columns.Bound(m => m.Id).Hidden();
                  columns.Bound(m => m.Title).MinScreenWidth(120).Width(200);
                  columns.Bound(m => m.AResult).Sortable(false).Filterable(false)
                      .MinResizableWidth(120).Width(200);
                  columns.Bound(m => m.BResult).Sortable(false).Filterable(false)
                      .MinResizableWidth(120).Width(200);
                  columns.Bound(m => m.CResult).Sortable(false).Filterable(false)
                      .MinResizableWidth(120).Width(200);
                  columns.Bound(m => m.Ctime).Format("{0:yyyy/MM/dd}")
                      .MinResizableWidth(120).Width(160);
                  columns.Command(cmd =>
                  {
                      cmd.Custom("详情").Click("onDetail");
                      //cmd.Edit();
                      //cmd.Destroy();
                  }).Width(100).Title("详情");
              }
          )
          //.ToolBar(toolbar => toolbar.Create())
          .Resizable(resize => resize.Columns(true))
          //.Editable(edit => edit.Mode(GridEditMode.InLine))
          .Scrollable(scrollable => { scrollable.Enabled(true);
                                        scrollable.Height(800);
          })
          .Filterable(filterable => filterable.Mode(GridFilterMode.Menu))
          .Pageable(pg => { pg.PageSizes(new int[] { 5, 10, 20, 50 }).Refresh(true); }).Sortable()
            .DataSource(dataSource => dataSource
            .Ajax().PageSize(10).Sort(m => m.Add(m2 => m2.Ctime).Descending())
            .Model(model => model.Id(p => p.Id))
            .Read(read => read.Action("TextClassifications_Read",
            "TextClassification"))
        )
    )
</div> 

<hr />
<div class="row">
    @using (Html.BeginForm("AddNew", "TextClassification",
      FormMethod.Post, new { @class = "form-horizontal col-md-10", role = "form" }))
    {
        @Html.AntiForgeryToken()
        <h4>稿件自动分类 - 新增一篇文章</h4>
        @Html.ValidationSummary("", new { @class = "text-danger" })
        <div class="form-group">
            <div class="col-md-1">
                @Html.LabelFor(m => m.Title, new { @class = "control-label" })
            </div>
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.Title, new { @class = "form-control", style = "max-width:640px" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-1">
                @Html.Label("", "*", new { style = "color:red" })
                @Html.LabelFor(m => m.Content, new { @class = "control-label" })
            </div>
            <div class="col-md-10">
                @Html.TextAreaFor(m => m.Content, new { @class = "form-control", style = "max-width:640px;width:640px;height:240px" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" class="btn btn-default" value="新增一篇文章" />
            </div>
        </div>
    }
</div>
